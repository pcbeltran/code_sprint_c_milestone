{"ast":null,"code":"import db from \"./firebase\";\nimport sampleData from \"./sample-data.json\";\n\nasync function loadSampleData() {\n  sampleData.map(AddBreed);\n}\n\nasync function AddBreed({\n  title,\n  rating,\n  origin,\n  size,\n  weight\n}) {\n  try {\n    const data = {\n      title,\n      rating,\n      origin,\n      size,\n      weight\n    }; // Look up a movie matching the title and release year.\n\n    const snapshot = await db.collection(\"breeds\").where(\"title\", \"==\", title).where(\"origin\", \"==\", origin).where(\"size\", \"==\", size).where(\"weight\", \"==\", weight).get(); // Create a doc reference that points to where this movie is located in the DB - either a new\n    // doc if it is not there, or the existing doc.\n\n    let docRef;\n\n    if (snapshot.empty) {\n      docRef = db.collection(\"breeds\").doc();\n    } else {\n      docRef = snapshot.docs[0].ref;\n    } // Update the doc with the given data.\n\n\n    await docRef.set(data);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport default loadSampleData;","map":{"version":3,"sources":["/Users/user/Downloads/dogpedia_final-main/src/data/load-sample-data.js"],"names":["db","sampleData","loadSampleData","map","AddBreed","title","rating","origin","size","weight","data","snapshot","collection","where","get","docRef","empty","doc","docs","ref","set","error","console","log"],"mappings":"AAAA,OAAOA,EAAP,MAAe,YAAf;AACA,OAAOC,UAAP,MAAuB,oBAAvB;;AAEA,eAAeC,cAAf,GAAgC;AAC9BD,EAAAA,UAAU,CAACE,GAAX,CAAeC,QAAf;AACD;;AAED,eAAeA,QAAf,CAAwB;AAAEC,EAAAA,KAAF;AAASC,EAAAA,MAAT;AAAiBC,EAAAA,MAAjB;AAAyBC,EAAAA,IAAzB;AAA+BC,EAAAA;AAA/B,CAAxB,EAAiE;AAC/D,MAAI;AACF,UAAMC,IAAI,GAAG;AAAEL,MAAAA,KAAF;AAASC,MAAAA,MAAT;AAAiBC,MAAAA,MAAjB;AAAyBC,MAAAA,IAAzB;AAA+BC,MAAAA;AAA/B,KAAb,CADE,CAGF;;AACA,UAAME,QAAQ,GAAG,MAAMX,EAAE,CACtBY,UADoB,CACT,QADS,EAEpBC,KAFoB,CAEd,OAFc,EAEL,IAFK,EAECR,KAFD,EAGpBQ,KAHoB,CAGd,QAHc,EAGJ,IAHI,EAGEN,MAHF,EAIpBM,KAJoB,CAId,MAJc,EAIN,IAJM,EAIAL,IAJA,EAKpBK,KALoB,CAKd,QALc,EAKJ,IALI,EAKEJ,MALF,EAMpBK,GANoB,EAAvB,CAJE,CAYF;AACA;;AACA,QAAIC,MAAJ;;AACA,QAAIJ,QAAQ,CAACK,KAAb,EAAoB;AAClBD,MAAAA,MAAM,GAAGf,EAAE,CAACY,UAAH,CAAc,QAAd,EAAwBK,GAAxB,EAAT;AACD,KAFD,MAEO;AACLF,MAAAA,MAAM,GAAGJ,QAAQ,CAACO,IAAT,CAAc,CAAd,EAAiBC,GAA1B;AACD,KAnBC,CAqBF;;;AACA,UAAMJ,MAAM,CAACK,GAAP,CAAWV,IAAX,CAAN;AACD,GAvBD,CAuBE,OAAOW,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF;;AAED,eAAenB,cAAf","sourcesContent":["import db from \"./firebase\";\nimport sampleData from \"./sample-data.json\";\n\nasync function loadSampleData() {\n  sampleData.map(AddBreed);\n}\n\nasync function AddBreed({ title, rating, origin, size, weight }) {\n  try {\n    const data = { title, rating, origin, size, weight };\n\n    // Look up a movie matching the title and release year.\n    const snapshot = await db\n      .collection(\"breeds\")\n      .where(\"title\", \"==\", title)\n      .where(\"origin\", \"==\", origin)\n      .where(\"size\", \"==\", size)\n      .where(\"weight\", \"==\", weight)\n      .get();\n\n    // Create a doc reference that points to where this movie is located in the DB - either a new\n    // doc if it is not there, or the existing doc.\n    let docRef;\n    if (snapshot.empty) {\n      docRef = db.collection(\"breeds\").doc();\n    } else {\n      docRef = snapshot.docs[0].ref;\n    }\n\n    // Update the doc with the given data.\n    await docRef.set(data);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport default loadSampleData;\n"]},"metadata":{},"sourceType":"module"}