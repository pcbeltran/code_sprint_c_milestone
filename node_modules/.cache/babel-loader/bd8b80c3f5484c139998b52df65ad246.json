{"ast":null,"code":"var _jsxFileName = \"/Users/user/Downloads/dogpedia_final-main/src/components/edit-breed.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { breedsCollection } from \"../data/firebase\";\nimport \"./edit-breed.css\";\nimport ErrorMessage from \"./error-message\";\nimport LoadingSpinner from \"./loading-spinner\";\nimport BreedForm from \"./breed-form\";\n\nfunction EditBreed(props) {\n  const {\n    id\n  } = props;\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [breedData, setBreedData] = useState(null);\n  const [isSaving, setIsSaving] = useState(false);\n  const [formMessage, setFormMessage] = useState(null);\n  useEffect(() => {\n    async function getBreed() {\n      setIsLoading(true);\n\n      try {\n        const breedSnapshot = await breedsCollection.doc(id).get();\n\n        if (!breedSnapshot.exists) {\n          throw new Error(\"No such breed exists!\");\n        }\n\n        const data = breedSnapshot.data();\n        setBreedData(data);\n      } catch (error) {\n        setErrorMessage(\"Something went wrong. Please try again\");\n        console.error(error);\n      }\n\n      setIsLoading(false);\n    }\n\n    getBreed();\n  }, [id]);\n\n  const onBreedSubmit = async (title, origin, rating, size, weight) => {\n    setIsSaving(true);\n    setFormMessage(\"\");\n\n    try {\n      await breedsCollection.doc(id).set({\n        title,\n        origin,\n        rating,\n        size,\n        weight\n      });\n      setFormMessage(\"Saved successfully!\");\n    } catch (error) {\n      setFormMessage(\"Something went wrong editing this breed. Please try again.\");\n      console.error(error);\n    }\n\n    setIsSaving(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"edit-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, \"Edit Breed\"), isLoading && /*#__PURE__*/React.createElement(LoadingSpinner, {\n    size: \"50px\",\n    spinnerColor: \"white\",\n    backgroundColor: \"rgb(255, 255, 255, 0.2)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), errorMessage && /*#__PURE__*/React.createElement(ErrorMessage, {\n    displayAsCard: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 24\n    }\n  }, errorMessage), breedData && /*#__PURE__*/React.createElement(BreedForm, {\n    initialState: breedData,\n    onSubmit: onBreedSubmit,\n    isSaving: isSaving,\n    message: formMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default EditBreed;","map":{"version":3,"sources":["/Users/user/Downloads/dogpedia_final-main/src/components/edit-breed.js"],"names":["React","useState","useEffect","breedsCollection","ErrorMessage","LoadingSpinner","BreedForm","EditBreed","props","id","isLoading","setIsLoading","errorMessage","setErrorMessage","breedData","setBreedData","isSaving","setIsSaving","formMessage","setFormMessage","getBreed","breedSnapshot","doc","get","exists","Error","data","error","console","onBreedSubmit","title","origin","rating","size","weight","set"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { breedsCollection } from \"../data/firebase\";\nimport \"./edit-breed.css\";\nimport ErrorMessage from \"./error-message\";\nimport LoadingSpinner from \"./loading-spinner\";\nimport BreedForm from \"./breed-form\";\n\nfunction EditBreed(props) {\nconst { id } = props;\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [breedData, setBreedData] = useState(null);\n  const [isSaving, setIsSaving] = useState(false);\n  const [formMessage, setFormMessage] = useState(null);\n\n  useEffect(() => {\n    async function getBreed() {\n      setIsLoading(true);\n      try {\n        const breedSnapshot = await breedsCollection.doc(id).get();\n\n        if (!breedSnapshot.exists) {\n          throw new Error(\"No such breed exists!\");\n        }\n\n        const data = breedSnapshot.data();\n        setBreedData(data);\n      } catch (error) {\n        setErrorMessage(\"Something went wrong. Please try again\");\n        console.error(error);\n      }\n      setIsLoading(false);\n    }\n\n    getBreed(); \n  }, [id]);\n\n  const onBreedSubmit = async (title, \n    origin, \n    rating, \n    size, \n    weight, \n   ) => {\n    setIsSaving(true);\n    setFormMessage(\"\");\n\n    try {\n      await breedsCollection.doc(id).set({\n        title,\n        origin, \n        rating, \n        size, \n        weight, \n      });\n      setFormMessage(\"Saved successfully!\");\n\n    }catch (error) {\n      setFormMessage(\"Something went wrong editing this breed. Please try again.\");\n      console.error(error);\n    }\n\n    setIsSaving(false);\n  };\n\n  return (\n    <div className=\"edit-container\">\n      <h2>Edit Breed</h2>\n      {isLoading && (\n        <LoadingSpinner\n          size=\"50px\"\n          spinnerColor=\"white\"\n          backgroundColor=\"rgb(255, 255, 255, 0.2)\"\n        />\n      )}\n      {errorMessage && <ErrorMessage displayAsCard>{errorMessage}</ErrorMessage>}\n      {breedData && (\n        <BreedForm\n        initialState={breedData}\n        onSubmit={onBreedSubmit}\n        isSaving={isSaving}\n        message={formMessage}\n        />\n      )}\n      </div>);\n}\n\nexport default EditBreed;\n\n"]},"metadata":{},"sourceType":"module"}